{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarawing/Code/mockshop/src/components/SearchResultOverlay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles({\n  resultContainer: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: 1,\n    width: '100%',\n    height: '100vh'\n  }\n});\nexport default function SearchResultOverlay() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    searchValue\n  } = useSelector(state => state.app);\n  const {\n    productsByID,\n    selectedCategory\n  } = useSelector(state => state.products);\n\n  if (searchValue.length === 0) {\n    return null;\n  } else {\n    if (searchValue.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.resultContainer,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Search Results for \\\"\", searchValue, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this);\n    }\n\n    if (searchValue.length > 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.resultContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: productsByID.includes(searchValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), \"console.log(\", productsByID.includes(searchValue), \");\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\n\n_s(SearchResultOverlay, \"apc2hd37nhfODMu0hzycuAEmAbI=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = SearchResultOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResultOverlay\");","map":{"version":3,"sources":["/Users/sarawing/Code/mockshop/src/components/SearchResultOverlay.js"],"names":["React","useSelector","makeStyles","useStyles","resultContainer","backgroundColor","position","zIndex","width","height","SearchResultOverlay","classes","searchValue","state","app","productsByID","selectedCategory","products","length","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,eAAe,EAAE;AACfC,IAAAA,eAAe,EAAE,OADF;AAEfC,IAAAA,QAAQ,EAAE,UAFK;AAGfC,IAAAA,MAAM,EAAE,CAHO;AAIfC,IAAAA,KAAK,EAAE,MAJQ;AAKfC,IAAAA,MAAM,EAAE;AALO;AADU,CAAD,CAA5B;AAUA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAAnC;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAqCf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACI,QAAhB,CAAtD;;AAEA,MAAGL,WAAW,CAACM,MAAZ,KAAqB,CAAxB,EAA2B;AACzB,WAAO,IAAP;AACD,GAFD,MAEO;AACP,QAAGN,WAAW,CAACM,MAAZ,GAAqB,CAAxB,EAA2B;AACzB,0BACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACP,eAAxB;AAAA,+BACE;AAAA,8CAAyBQ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKC;;AACC,QAAGA,WAAW,CAACM,MAAZ,GAAqB,CAAxB,EAA2B;AACzB,0BACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACP,eAAxB;AAAA,gCACE;AAAA,oBAAMW,YAAY,CAACI,QAAb,CAAsBP,WAAtB;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,kBAEeG,YAAY,CAACI,QAAb,CAAsBP,WAAtB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMC;AACN;AACF;;GAxBuBF,mB;UACNP,S,EACQF,W,EACmBA,W;;;KAHrBS,mB","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  resultContainer: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: 1,\n    width: '100%',\n    height: '100vh',\n  }\n});\n\nexport default function SearchResultOverlay() {\n  const classes = useStyles();\n  const { searchValue } = useSelector(state => state.app);\n  const { productsByID, selectedCategory } = useSelector(state => state.products);\n\n  if(searchValue.length===0) {\n    return null\n  } else {\n  if(searchValue.length > 0) {\n    return (\n      <div className={classes.resultContainer}>\n        <h1>Search Results for \"{searchValue}\"</h1>\n      </div>\n    )\n    }\n      if(searchValue.length > 2) {\n        return (\n          <div className={classes.resultContainer}>\n            <div>{productsByID.includes(searchValue)}</div>\n            console.log({productsByID.includes(searchValue)});\n          </div>\n          )\n        }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}