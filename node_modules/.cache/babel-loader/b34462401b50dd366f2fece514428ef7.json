{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarawing/Code/mockshop/src/components/CategoriesList.js\",\n    _s = $RefreshSig$();\n\n// <CategoriesList />\n//   Has selector that returns products grouped by category\n//   Displays loading state or categories */}\nimport { CardMedia, Typography, makeStyles, CardActionArea, CardContent, CircularProgress, Card, Button, capitalize } from \"@material-ui/core\";\nimport { useSelector } from 'react-redux';\nimport { setCategory } from '../ actions / appActions';\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: center\n  },\n  card: {\n    width: 200\n  },\n  categoryImage: {\n    height: 120,\n    width: 220\n  },\n  titleCase: {\n    textTransform: 'capitalize'\n  }\n});\nexport default function CategoriesList() {\n  _s();\n\n  const productsByCategory = useSelector(state => {\n    var _state$products;\n\n    return (_state$products = state.products) === null || _state$products === void 0 ? void 0 : _state$products.productsByCategory;\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    return dispatch(setCategory());\n  };\n\n  const renderProducts = () => {\n    const products = Object.keys(productsByCategory || {}).map((category, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => clickHandler(),\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.categoryImage,\n            image: productsByCategory[category][0].image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary\",\n              className: classes.titleCase,\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: productsByCategory === null ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }, this) : renderProducts()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoriesList, \"wyMPY7kzFvQMHFkd+qHw5tySUm4=\", true, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CategoriesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesList\");","map":{"version":3,"sources":["/Users/sarawing/Code/mockshop/src/components/CategoriesList.js"],"names":["CardMedia","Typography","makeStyles","CardActionArea","CardContent","CircularProgress","Card","Button","capitalize","useSelector","setCategory","useStyles","container","display","justifyContent","center","card","width","categoryImage","height","titleCase","textTransform","CategoriesList","productsByCategory","state","products","classes","dispatch","useDispatch","clickHandler","renderProducts","Object","keys","map","category","index","image"],"mappings":";;;;;AAAA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,UAAhC,EAA4CC,cAA5C,EAA4DC,WAA5D,EAAyEC,gBAAzE,EAA2FC,IAA3F,EAAiGC,MAAjG,EAAyGC,UAAzG,QAA2H,mBAA3H;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAC;AAC3BU,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAEC;AAFP,GADgB;AAK3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GALqB;AAQ3BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,GADK;AAEbF,IAAAA,KAAK,EAAE;AAFM,GARY;AAY3BG,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE;AADN;AAZgB,CAAD,CAA5B;AAiBA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,kBAAkB,GAAGd,WAAW,CACpCe,KAAK;AAAA;;AAAA,8BAAIA,KAAK,CAACC,QAAV,oDAAI,gBAAgBF,kBAApB;AAAA,GAD+B,CAAtC;AAGA,QAAMG,OAAO,GAAGf,SAAS,EAAzB;AAEA,QAAMgB,QAAQ,GAAGC,WAAW,EAA5B;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOF,QAAQ,CAACjB,WAAW,EAAZ,CAAf;AACD,GAFD;;AAIA,QAAMoB,cAAc,GAAG,MAAM;AAC3B,UAAML,QAAQ,GAAGM,MAAM,CAACC,IAAP,CAAYT,kBAAkB,IAAI,EAAlC,EAAsCU,GAAtC,CAA0C,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC9E,0BACE,QAAC,IAAD;AAAkB,QAAA,SAAS,EAAET,OAAO,CAACV,IAArC;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAE,MAAMa,YAAY,EAA3C;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,SAAS,EAAEH,OAAO,CAACR,aADrB;AAEE,YAAA,KAAK,EAAEK,kBAAkB,CAACW,QAAD,CAAlB,CAA6B,CAA7B,EAAgCE;AAFzC;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,OAAO,EAAC,IADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,SAAS,EAAEV,OAAO,CAACN,SAHrB;AAAA,wBAKGc;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD,KApBgB,CAAjB;AAsBA,wBACE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACd,SAAxB;AAAA,gBACGa;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GA5BD;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACd,SAAxB;AAAA,cACGW,kBAAkB,KAAK,IAAvB,gBAA8B,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,YAA9B,GAA+DO,cAAc;AADhF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9CuBR,c;UACKb,W,EAGXE,S;;;KAJMW,c","sourcesContent":["// <CategoriesList />\n//   Has selector that returns products grouped by category\n//   Displays loading state or categories */}\n\nimport { CardMedia, Typography, makeStyles, CardActionArea, CardContent, CircularProgress, Card, Button, capitalize } from \"@material-ui/core\";\nimport { useSelector } from 'react-redux';\nimport { setCategory } from '../ actions / appActions';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: center\n  },\n  card: {\n    width: 200,\n  },\n  categoryImage: {\n    height: 120,\n    width: 220,\n  },\n  titleCase: {\n    textTransform: 'capitalize',\n  },\n});\n\nexport default function CategoriesList() {\n  const productsByCategory = useSelector(\n    state => state.products?.productsByCategory\n  );\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const clickHandler = () => {\n    return dispatch(setCategory());\n  }\n\n  const renderProducts = () => {\n    const products = Object.keys(productsByCategory || {}).map((category, index) => {\n      return (\n        <Card key={index} className={classes.card} >\n          <CardActionArea onClick={() => clickHandler()}>\n            <CardMedia\n              className={classes.categoryImage}\n              image={productsByCategory[category][0].image}\n            />\n            <CardContent>\n              <Typography\n                variant='h6'\n                color='primary'\n                className={classes.titleCase}\n              >\n                {category}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      );\n    })\n\n    return (\n      <div className={classes.container}>\n        {products}\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      {productsByCategory === null ? <CircularProgress size={24} /> : renderProducts()}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}