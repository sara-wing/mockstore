{"ast":null,"code":"export default function productsReducer(state = {}, action) {\n  switch (action.type) {\n    case 'POPULATE_PRODUCTS':\n      const productsByCategory = action.payload.reduce((accumulator, product) => {\n        const category = product.category;\n        return { ...accumulator,\n          [category]: [...(accumulator[category] || []), product]\n        };\n      }, {}); // var createMapFromList = function(objectList, property) {\n      //   var objMap = {};\n      //   objectList.forEach(function(obj) {\n      //     objMap[obj[property]] = obj;\n      //   });\n      //   return objMap;\n      // };\n      // objectList - the array  ;  property - property as the key\n\n      const productsByID = {};\n      action.payload.forEach(product => {\n        productsByID[product[id]] = product;\n      });\n      debugger;\n      return { ...state,\n        products: action.payload,\n        productsByCategory,\n        productsByID\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sarawing/Code/mockshop/src/reducers/productsReducer.js"],"names":["productsReducer","state","action","type","productsByCategory","payload","reduce","accumulator","product","category","productsByID","forEach","id","products"],"mappings":"AAAA,eAAe,SAASA,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,YAAMC,kBAAkB,GAAGF,MAAM,CAACG,OAAP,CAAeC,MAAf,CACzB,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACxB,cAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAzB;AACA,eAAO,EACL,GAAGF,WADE;AAEL,WAACE,QAAD,GAAY,CAAC,IAAIF,WAAW,CAACE,QAAD,CAAZ,IAA2B,EAA9B,CAAD,EAAmCD,OAAnC;AAFP,SAAP;AAID,OAPwB,EAQzB,EARyB,CAA3B,CADF,CAYE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAME,YAAY,GAAG,EAArB;AACAR,MAAAA,MAAM,CAACG,OAAP,CAAeM,OAAf,CAAuBH,OAAO,IAAI;AAChCE,QAAAA,YAAY,CAACF,OAAO,CAACI,EAAD,CAAR,CAAZ,GAA4BJ,OAA5B;AACD,OAFD;AAKA;AAEA,aAAO,EACL,GAAGP,KADE;AAELY,QAAAA,QAAQ,EAAEX,MAAM,CAACG,OAFZ;AAGLD,QAAAA,kBAHK;AAILM,QAAAA;AAJK,OAAP;;AAOF;AACE,aAAOT,KAAP;AAvCJ;AAyCD","sourcesContent":["export default function productsReducer(state = {}, action) {\n  switch (action.type) {\n    case 'POPULATE_PRODUCTS':\n      const productsByCategory = action.payload.reduce(\n        (accumulator, product) => {\n          const category = product.category;\n          return {\n            ...accumulator,\n            [category]: [...(accumulator[category]) || [], product],\n          };\n        },\n        {}\n      );\n\n      // var createMapFromList = function(objectList, property) {\n      //   var objMap = {};\n      //   objectList.forEach(function(obj) {\n      //     objMap[obj[property]] = obj;\n      //   });\n      //   return objMap;\n      // };\n      // objectList - the array  ;  property - property as the key\n\n\n      const productsByID = {}\n      action.payload.forEach(product => {\n        productsByID[product[id]] = product;\n      })\n\n\n      debugger\n\n      return {\n        ...state,\n        products: action.payload,\n        productsByCategory,\n        productsByID\n      }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}