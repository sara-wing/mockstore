[{"/Users/sarawing/Code/mockshop/src/index.js":"1","/Users/sarawing/Code/mockshop/src/components/App.js":"2","/Users/sarawing/Code/mockshop/src/store.js":"3","/Users/sarawing/Code/mockshop/src/reducers/productsReducer.js":"4","/Users/sarawing/Code/mockshop/src/actions/productsActions.js":"5"},{"size":364,"mtime":1611637899230,"results":"6","hashOfConfig":"7"},{"size":1573,"mtime":1612514853108,"results":"8","hashOfConfig":"7"},{"size":213,"mtime":1612601279170,"results":"9","hashOfConfig":"7"},{"size":744,"mtime":1612513156255,"results":"10","hashOfConfig":"7"},{"size":356,"mtime":1612483297486,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cfxngy",{"filePath":"15","messages":"16","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"/Users/sarawing/Code/mockshop/src/index.js",[],["27","28"],"/Users/sarawing/Code/mockshop/src/components/App.js",["29"],"import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../actions/productsActions';\r\n// import { CategoriesList.react } from './CategoriesList.react.js';\r\n// import thunk from 'redux-thunk';\r\nimport ProductList from './ProductList';\r\nimport { fetchProducts } from '../actions/productsActions';\r\n\r\nconst useStyles = makeStyles({\r\n  app: {\r\n    fontFamily: 'Roboto, Arial, Helvetica, sans-serif',\r\n  }.\r\n});\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getProducts()), [dispatch]);\r\n  return (\r\n    <div className={styleMedia.app}>\r\n      <CategoriesList />\r\n    </div>\r\n  );\r\n}\r\nconst handleAddProduct = () => {\r\n  dispatch(addProduct(newProduct))\r\n  setNewProduct('')\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <h1>HELLO WORLD</h1>\r\n    {/* <input type=\"text\" value={newProduct} onChange={(e) => setNewProduct(e.target.value)} />\r\n      <button onClick={handleAddProduct}>\r\n        Add product to store\r\n      </button> */}\r\n    <button\r\n      onClick={() => dispatch(fetchProducts())}\r\n    >\r\n      fetch products\r\n      </button>\r\n\r\n    <ProductList />\r\n  </div>\r\n);\r\n}\r\n\r\nexport default App;\r\n\r\n// {/* <App /> \r\n//   On mount dispatch “getProducts” thunk\r\n//   Render <CategoriesList />\r\n\r\n// getProducts Thunk fetches products from https://fakestoreapi.com/products\r\n//   Use ‘Thunk’ for data fetching (network requests, async behavior)\r\n//   On success dispatch “POPULATE_PRODUCTS” with products as payload\r\n","/Users/sarawing/Code/mockshop/src/store.js",[],"/Users/sarawing/Code/mockshop/src/reducers/productsReducer.js",["30"],"// Reducer handles “POPULATE_PRODUCTS” case\n//   Adds raw data/products to store\n//   In reducer, adds products grouped by category to store\n// Create object where key is the category and value is an array of objects within the category \n\nexport default function productsReducer(state = {}, action) {\n  switch (action.type) {\n    case 'POPULATE_PRODUCTS':\n      const productsByCategory = action.payload.reduce(\n        (accumulator, product) => {\n          const category = product.cateogry;\n          return {\n            ...accumulator,\n            [category]: [...(accumulator[category]) || [], product],\n          };\n        },\n        {}\n      );\n      return { ...state, productsByCategory };\n\n    default:\n      return state;\n  }\n}\n","/Users/sarawing/Code/mockshop/src/actions/productsActions.js",["31"],"import { slice } from '../reducers/productsReducer';\n\nexport const { addProduct, POPULATE_PRODUCTS } = slice.actions;\n\nconst populateProducts = products => ({\n  type: `POPULATE_PRODUCTS`,\n  payload: products\n})\nexport const fetchProducts = () => async (dispatch) => {\n  const response = await fetch('https://fakestoreapi.com/products');\n  const products = await response.json();\n=  dispatch(POPULATE_PRODUCTS(products));\n};\n",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":null,"fatal":true,"severity":2,"message":"38","line":14,"column":1},{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":19,"column":46},{"ruleId":null,"fatal":true,"severity":2,"message":"40","line":8,"column":1},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 | \u001b[39m    fontFamily\u001b[33m:\u001b[39m \u001b[32m'Roboto, Arial, Helvetica, sans-serif'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  }\u001b[33m.\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mApp\u001b[39m \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m  \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch()\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unterminated string constant\n\n\u001b[0m \u001b[90m 17 | \u001b[39m        {}\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m      \u001b[36mreturn\u001b[39m { \u001b[33m...\u001b[39mstate\u001b[33m,\u001b[39m productsByCategory }\u001b[32m'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m    \u001b[36mdefault\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m      \u001b[36mreturn\u001b[39m state\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m  \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m await fetch(\u001b[32m'https://fakestoreapi.com/products'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  \u001b[36mconst\u001b[39m products \u001b[33m=\u001b[39m await response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m\u001b[33m=\u001b[39m  dispatch(\u001b[33mPOPULATE_PRODUCTS\u001b[39m(products))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m",["43"],["44"],"no-global-assign","no-unsafe-negation"]