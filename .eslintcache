[{"/Users/sarawing/Code/mockshop/src/index.js":"1","/Users/sarawing/Code/mockshop/src/components/App.js":"2","/Users/sarawing/Code/mockshop/src/store.js":"3","/Users/sarawing/Code/mockshop/src/reducers/productsReducer.js":"4","/Users/sarawing/Code/mockshop/src/actions/productsActions.js":"5","/Users/sarawing/Code/mockshop/src/components/CategoriesList.js":"6","/Users/sarawing/Code/mockshop/src/reducers/rootReducer.js":"7"},{"size":364,"mtime":1611637899230,"results":"8","hashOfConfig":"9"},{"size":1139,"mtime":1613451525365,"results":"10","hashOfConfig":"9"},{"size":281,"mtime":1613452699694,"results":"11","hashOfConfig":"9"},{"size":743,"mtime":1613509355584,"results":"12","hashOfConfig":"9"},{"size":510,"mtime":1613451793228,"results":"13","hashOfConfig":"9"},{"size":1344,"mtime":1613453525986,"results":"14","hashOfConfig":"9"},{"size":154,"mtime":1613452417416,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cfxngy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarawing/Code/mockshop/src/index.js",[],["32","33"],"/Users/sarawing/Code/mockshop/src/components/App.js",["34","35"],"import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n// import { addProduct } from '../actions/productsActions';\r\nimport CategoriesList from './CategoriesList';\r\n// import thunk from 'redux-thunk';\r\n// import ProductList from './ProductList';\r\nimport { fetchProducts } from '../actions/productsActions';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  app: {\r\n    fontFamily: 'Roboto, Arial, Helvetica, sans-serif',\r\n  }\r\n});\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchProducts()), [dispatch]);\r\n  return (\r\n    <div className={styleMedia.app}>\r\n      <CategoriesList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// {/* <App /> \r\n//   On mount dispatch “getProducts” thunk\r\n//   Render <CategoriesList />\r\n\r\n// getProducts Thunk fetches products from https://fakestoreapi.com/products\r\n//   Use ‘Thunk’ for data fetching (network requests, async behavior)\r\n//   On success dispatch “POPULATE_PRODUCTS” with products as payload\r\n","/Users/sarawing/Code/mockshop/src/store.js",[],"/Users/sarawing/Code/mockshop/src/reducers/productsReducer.js",[],"/Users/sarawing/Code/mockshop/src/actions/productsActions.js",[],"/Users/sarawing/Code/mockshop/src/components/CategoriesList.js",["36"],"/Users/sarawing/Code/mockshop/src/reducers/rootReducer.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":12,"column":7,"nodeType":"43","messageId":"44","endLine":12,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":5,"column":98,"nodeType":"43","messageId":"44","endLine":5,"endColumn":104},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]